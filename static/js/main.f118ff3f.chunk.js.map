{"version":3,"sources":["mock/index.js","components/CategoryFilter.jsx","components/DetailPage.jsx","components/Footer.jsx","components/Header.jsx","components/Page404.jsx","components/Pagination.jsx","components/PostList.jsx","components/App.jsx","index.jsx"],"names":["createServer","routes","this","namespace","get","data","CategoryFilter","posts","handleChange","totalPosts","useState","categories","setCategories","useEffect","newCategories","Set","add","forEach","post","category","name","className","id","onChange","map","categoryName","value","DetailView","detailedPost","src","author","avatar","slice","indexOf","alt","moment","publishDate","format","title","summary","to","DetailPage","setDetailedPost","loading","setLoading","useParams","filter","Footer","href","size","Header","Page404","Pagination","postsPerPage","paginate","currentPage","pageNumbers","i","Math","ceil","push","anchorClassName","number","onClick","Item","PostList","App","setPosts","filteredPosts","setFilteredPosts","setCurrentPage","Data","indexOfLastPost","indexOfFirstPost","currentFilteredPosts","e","target","newFilteredPosts","length","path","element","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f118ff3f.chunk.js","sourcesContent":["import { createServer } from 'miragejs';\r\n\r\nimport data from './data.json';\r\n\r\ncreateServer({\r\n  routes() {\r\n    this.namespace = 'api';\r\n\r\n    this.get('/posts', () => {\r\n      return data;\r\n    });\r\n  },\r\n});\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default function CategoryFilter({ posts, handleChange, totalPosts }) {\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // iam am using a set so every value will be unique\r\n    const newCategories = new Set();\r\n    // add Display All option:\r\n    newCategories.add('Display All');\r\n    // create a set of categories, that will be displayed in a drop-down list\r\n    posts.forEach((post) => {\r\n      post.categories.forEach((category) => {\r\n        newCategories.add(category.name);\r\n      });\r\n    });\r\n    setCategories([...newCategories]);\r\n    // add posts dependency in case the posts change\r\n  }, [posts]);\r\n\r\n  if (categories) {\r\n    return (\r\n      <div className=\"CategoryFilter\">\r\n        <p>\r\n          <strong>Add filter: </strong>\r\n        </p>\r\n        <select name=\"categories\" id=\"categories\" onChange={handleChange}>\r\n          {categories.map((categoryName) => (\r\n            <option value={categoryName} key={categoryName}>\r\n              {categoryName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <p>\r\n          There are <strong>{totalPosts}</strong> posts in this category.\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"loading\">loading</div>;\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport '../styles/DetailPage.css';\r\n\r\nfunction DetailView({ detailedPost }) {\r\n  if (detailedPost) {\r\n    return (\r\n      <article className=\"DetailView\">\r\n        <img\r\n          // removes the \"?size=50x50&set=set1 from the string\"\r\n          // otherwise the link did not work\r\n          src={detailedPost.author.avatar.slice(\r\n            0,\r\n            detailedPost.author.avatar.indexOf('?')\r\n          )}\r\n          alt=\"avatar\"\r\n        />\r\n        <h3>Author: {detailedPost.author.name}</h3>\r\n        <p>\r\n          Published at:{' '}\r\n          {moment(detailedPost.publishDate).format('Do of MMMM YYYY')}\r\n        </p>\r\n\r\n        <div className=\"content-container\">\r\n          <h1>{detailedPost.title}</h1>\r\n          <p>{detailedPost.summary}</p>\r\n        </div>\r\n        <button>\r\n          <Link className=\"link\" to=\"/\">\r\n            Go back\r\n          </Link>\r\n        </button>\r\n      </article>\r\n    );\r\n  } else {\r\n    return <div className=\"loading\">Loading</div>;\r\n  }\r\n}\r\n\r\nexport default function DetailPage({ posts }) {\r\n  const [detailedPost, setDetailedPost] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  // take the id from the url\r\n  const { id } = useParams();\r\n  // find and return element with the same id\r\n  useEffect(() => {\r\n    setDetailedPost(posts.filter((post) => post.id === id)[0]);\r\n    setLoading(false);\r\n  }, [posts, id]);\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"DetailPage\">\r\n        <DetailView detailedPost={detailedPost} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div className=\"loading\">Loading</div>;\r\n  }\r\n}\r\n","import { BsGithub } from 'react-icons/bs';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <a href=\"https://github.com/t3t3c\">\r\n        <BsGithub size=\"1.6em\" />\r\n      </a>\r\n      <p>Website made by Hubert Gajewski</p>\r\n    </footer>\r\n  );\r\n}\r\n","import { GiRobotAntennas } from 'react-icons/gi';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <GiRobotAntennas className=\"logo\" />\r\n      <h1>Robots Forum</h1>\r\n    </header>\r\n  );\r\n}\r\n","import '../styles/Page404.css';\r\n\r\nexport default function Page404() {\r\n  return (\r\n    <div className=\"error\">\r\n      <h1>404</h1>\r\n      <p>Could not find requested page</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, currentPage }) => {\r\n  const pageNumbers = [];\r\n\r\n  // calculate rounded up number of the pages\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  // add current class to current anchor to style it\r\n  function anchorClassName(number) {\r\n    if (number === currentPage) {\r\n      return 'page-link current';\r\n    } else {\r\n      return 'page-link';\r\n    }\r\n  }\r\n  // show the numbers\r\n  return (\r\n    <nav>\r\n      <ul className=\"Pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item\">\r\n            {/* onClick we change the current page */}\r\n            <button\r\n              onClick={() => paginate(number)}\r\n              className={anchorClassName(number)}\r\n            >\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","// module for formating dates\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Item({ post }) {\r\n  return (\r\n    <>\r\n      <article className=\"Item\">\r\n        <img\r\n          // removes the \"?size=50x50&set=set1 from the string\"\r\n          // otherwise the link did not work\r\n          src={post.author.avatar.slice(0, post.author.avatar.indexOf('?'))}\r\n          alt=\"avatar\"\r\n        />\r\n        <div className=\"item-content\">\r\n          <div className=\"title-summary\">\r\n            <h3>{post.title}</h3>\r\n            <p>{post.summary}</p>\r\n          </div>\r\n          <div className=\"author-date\">\r\n            <p>\r\n              <strong>{post.author.name}</strong>\r\n            </p>\r\n            {/* moment formats the date in a \"28th of September 2020\" format*/}\r\n            <p>{moment(post.publishDate).format('Do of MMMM YYYY')}</p>\r\n          </div>\r\n          <h4>\r\n            <Link to={'/posts/' + post.id} className=\"details\">\r\n              View details\r\n            </Link>\r\n          </h4>\r\n        </div>\r\n      </article>\r\n      {/* Pagination goes here provided by the Route */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function PostList({ posts }) {\r\n  return (\r\n    <div className=\"PostList\">\r\n      {posts.map((post) => (\r\n        <Item key={post.id} post={post} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport DetailPage from './DetailPage';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport Page404 from './Page404';\r\nimport Pagination from './Pagination';\r\nimport PostList from './PostList';\r\n\r\n/* THIS BRANCH IS FOR GITHUB PAGES ONLY! */\r\n// data is imported from file instead of fetched\r\nimport Data from '../mock/data.json';\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  // Display All is a default chosen category\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n  // Pagination Setup\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // 10 posts per page is set as default\r\n  const [postsPerPage] = useState(6);\r\n\r\n  // fetch data from the server\r\n  useEffect(() => {\r\n    // fetch(`${window.location.href}api/posts`, { mode: 'cors' })\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    // console.log(Data);\r\n    setPosts(Data.posts);\r\n    setFilteredPosts(Data.posts);\r\n    // });\r\n  }, []);\r\n\r\n  function handleFilterChange(e) {\r\n    // take the value from the dropdown\r\n    const value = e.target.value;\r\n    if (value === 'Display All') {\r\n      // display all posts\r\n      setFilteredPosts(posts);\r\n    } else {\r\n      const newFilteredPosts = posts.filter((post) => {\r\n        // if there is a category with the same name as chosen one,add the post\r\n        for (const category of post.categories) {\r\n          if (category.name === value) {\r\n            return true;\r\n          }\r\n        }\r\n        // this post did not have that category\r\n        return false;\r\n      });\r\n      // set current Page to 1\r\n      setCurrentPage(1);\r\n      // display filtered posts\r\n      setFilteredPosts(newFilteredPosts);\r\n    }\r\n  }\r\n\r\n  // Pagination setup:\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  // slice the posts we want to show\r\n  const currentFilteredPosts = filteredPosts.slice(\r\n    indexOfFirstPost,\r\n    indexOfLastPost\r\n  );\r\n\r\n  function paginate(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  if (posts) {\r\n    // if posts are finished fetching\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <CategoryFilter\r\n          posts={posts}\r\n          handleChange={handleFilterChange}\r\n          totalPosts={filteredPosts.length}\r\n        />\r\n        <div className=\"app-content\">\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={<PostList posts={currentFilteredPosts} />}\r\n            />\r\n            <Route path=\"/posts/:id\" element={<DetailPage posts={posts} />} />\r\n            <Route path=\"*\" element={<Page404 />} />\r\n          </Routes>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                <Pagination\r\n                  postsPerPage={postsPerPage}\r\n                  totalPosts={filteredPosts.length}\r\n                  paginate={paginate}\r\n                  currentPage={currentPage}\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  } else {\r\n    // posts have not finished fetching\r\n    return <div className=\"loading\">Loading</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n/**\r\n * This file can be ignored, please work in ./components/App.jsx\r\n */\r\n\r\n// Include mock API.\r\nimport './mock';\r\n\r\n// Include styles.\r\nimport './styles/index.css';\r\n\r\n// Include application component.\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}